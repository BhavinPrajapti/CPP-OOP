/*
 * test.cpp
 *
 *  Created on: 1 Aug 2024
 *      Author: hp
 */



#include "SmartHome.h"
#include "Light.h"
#include "ComplexAppliance.h"
#include "User.h"
#include "EnergyConsumption.h"
#include <iostream>
#include <cstdlib>
#include <vector>
#include <map>
#include <memory>
#include <stdexcept>
#include <Poco/DateTime.h>

using namespace std;

/**
 * Outputs the failedMessage on the console if condition is false.
 *
 * @param condition the condition
 * @param failedMessage the message
 */
void assertTrue(bool condition, const string& failedMessage) {
    if (!condition) {
        cout << failedMessage << endl;
    }
}

/**
 * Tests for the Appliance classes. (XX points)
 */
void applianceTests() {
    /*
     * (1) Create instances of Light and ComplexAppliance classes with various attributes.
     *     Verify that their IDs, names, and specific attributes (powerUsage) are correctly set.
     *     Ensure that the getEnergyConsumption method works correctly for both classes.
     *     (20 points)
     */


    /*
     * (2) Test the toggle method for the Light class to ensure it changes the state correctly.
     *     Ensure that the isActive method reflects the correct state of the Light.
     *     (10 points)
     */

}

/**
 * Tests for the SmartHome class. (XX points)
 */
void smartHomeTests() {
    /*
     * (1) Create a SmartHome "Eco House" and add various appliances and users.
     *     Verify the addition of appliances and users and ensure attributes are correctly set.
     *     (20 points)
     */

    /*
     * (2) Test the assignApplianceToUser method to ensure appliances are assigned correctly.
     *     (10 points)
     */


    /*
     * (3) Record energy consumption for an appliance and calculate total energy consumption for a user.
     *     Verify correct recording and calculation of energy consumption.
     *     (20 points)
     */

    /*
     * (4) Test the calculateAverageAge method to ensure it calculates correctly.
     *     (10 points)
     */
    // Placeholder for calculating average age if age is included in User class

    /*
     * (5) Test the sortAnimalsByAge method to ensure it correctly sorts by age.
     *     (10 points)
     */
    // Placeholder for sorting functionality if ages are included
}

/**
 * Comprehensive tests involving multiple relationships. (XX points)
 */
void comprehensiveTests() {
    /*
     * (1) Create a SmartHome system where users interact with various appliances and energy consumption is recorded.
     *     Verify the complex relationships and interactions among users, appliances, and energy records.
     *     Use a mix of algorithms (like searching and sorting) to ensure complex interactions are handled correctly.
     *     (20 points)
     */

}

void allTests() {
    applianceTests();
    smartHomeTests();
    comprehensiveTests();
    return 0;
}

